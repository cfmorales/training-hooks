{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Proyectos\\\\React\\\\Testing\\\\hooks\\\\src\\\\ImageToggleOnScroll.js\";\nimport React, { useRef, useEffect, useState } from 'react';\n\nconst ImageToggleOnScroll = ({\n  primImg,\n  secImg\n}) => {\n  const imgRef = useRef(null);\n\n  const isInView = () => {\n    const rect = imgRef.current.getBoundingClientRect();\n    return rect.top >= 0 && rect.bottom <= window.innerHeight;\n  };\n\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', scrollHandler);\n    return () => {\n      window.removeEventListener('scroll', scrollHandler);\n    };\n  }, []);\n\n  const scrollHandler = () => {\n    setInView(isInView());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: inView ? secImg : primImg,\n      alt: \"\",\n      ref: imgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["D:/Proyectos/React/Testing/hooks/src/ImageToggleOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageToggleOnScroll","primImg","secImg","imgRef","isInView","rect","current","getBoundingClientRect","top","bottom","window","innerHeight","inView","setInView","addEventListener","scrollHandler","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAuB;AAC/C,QAAMC,MAAM,GAAGN,MAAM,CAAC,IAAD,CAArB;;AAEA,QAAMO,QAAQ,GAAG,MAAM;AACnB,UAAMC,IAAI,GAAGF,MAAM,CAACG,OAAP,CAAeC,qBAAf,EAAb;AACA,WAAOF,IAAI,CAACG,GAAL,IAAY,CAAZ,IAAiBH,IAAI,CAACI,MAAL,IAAeC,MAAM,CAACC,WAA9C;AACH,GAHD;;AAKA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBd,QAAQ,CAAC,KAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCD,aAArC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMA,aAAa,GAAG,MAAM;AACxBF,IAAAA,SAAS,CAACT,QAAQ,EAAT,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEQ,MAAM,GAAGV,MAAH,GAAYD,OAA5B;AAAqC,MAAA,GAAG,EAAC,EAAzC;AAA4C,MAAA,GAAG,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzBD;;AA2BA,eAAeH,mBAAf","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\r\n\r\nconst ImageToggleOnScroll = ({primImg, secImg}) => {\r\n    const imgRef = useRef(null);\r\n\r\n    const isInView = () => {\r\n        const rect = imgRef.current.getBoundingClientRect();\r\n        return rect.top >= 0 && rect.bottom <= window.innerHeight;\r\n    };\r\n\r\n    const [inView, setInView] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', scrollHandler);\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollHandler);\r\n        };\r\n    }, []);\r\n\r\n    const scrollHandler = () => {\r\n        setInView(isInView());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <img src={inView ? secImg : primImg} alt=\"\" ref={imgRef}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageToggleOnScroll;"]},"metadata":{},"sourceType":"module"}